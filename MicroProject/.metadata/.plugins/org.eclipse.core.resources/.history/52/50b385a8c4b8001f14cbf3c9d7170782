package Components;

import java.util.HashMap;
import java.util.Map;

public class ReservationStationEntry {
    public boolean busy;
    public String Tag ;
    public String op;
    public Double vj; // Use Double for optional values (nullable).
    public Double vk; // Use Double for optional values (nullable).
    public String qj;
    public String qk;
    public Integer timeRemaining; // Use Integer for optional values (nullable).
    public Double result; // Use Double for optional values (nullable).
    public Integer currentIndex; // Use Integer for optional values (nullable).
    public instruction instruction;
    public HashMap<Integer, RegFile> regFile; // Floating-point registers    
    // tag string


    public void takeinstruction(instruction instruction,HashMap<Integer, RegFile> regFile) {
    	this.instruction=instruction;
    	this.busy=true;
    	this.regFile=regFile;
    	//Loop Thru the hashmap compare the destination register in the instruction with Attribute RegName
        for (Map.Entry<Integer, RegFile> entry : this.regFile.entrySet()) {
        	RegFile RegFileinstance = entry.getValue();
              if(instruction.instructionDestinationReg.equals(RegFileinstance.RegName)){
            	  RegFileinstance.q=this.Tag;
            	  break;
              }
    };
    }



    @Override
    public String toString() {
        return "ReservationStationEntry: [Instruction = " + instruction + "]";
    }

}