package Components;

import java.util.Hashtable;

public class RegFile {
    private Double value; // Can be nullable
    private String q; // Can be nullable , tag or 0
    private int index;
    private String RegName;

    // Constructor
    public RegFile(Double value, String q, int index, String RegName) {
        this.value = value;
        this.q = q;
        this.index = index;
        this.RegName = RegName;
    }

    // Getter for value
    public Double getValue() {
        return value;
    }

    // Setter for value
    public void setValue(Double value) {
        this.value = value;
    }

    // Getter for q
    public String getQ() {
        return q;
    }

    // Setter for q
    public void setQ(String q) {
        this.q = q;
    }

    public int getIndex() {
        return index;
    }

    public void setIndex(int index) {
        this.index = index;
    }

    public String setRegName() {
        return RegName;
    }

    public void getRegName(String RegName) {
        this.RegName = RegName;
    }

    public static Hashtable<Integer, RegFile> generateStoreBufferTable(int numOfHashes) {
        Hashtable<Integer, RegFile> regFileTable = new Hashtable<>();

        // Populate the hash table with StoreBuffer instances
        for (int i = 0; i < numOfHashes; i++) {
            RegFile regFile = new RegFile(
                    null,
                    null, // address (arbitrary value based on index)
                    0,
                    null

            );

            // Store the StoreBuffer object in the hash table
            regFileTable.put(i, regFile);
        }

        return regFileTable;
    }
}